
PROJMAKE           := $(wildcard projects/$(PROJECT)/Makefile.prj)
ifneq ($(strip $(PROJMAKE)),)
	include projects/$(PROJECT)/Makefile.prj
endif

PROJECT_FLAG      = -DPROJECT_NAME=\'$(PROJECT)\'
CASE_FLAG         = -DCASE_NAME=\'$(CASE)\'
ARG_FLAGS         = -DARG_INT1=$(INPUT_INT1) -DARG_INT2=$(INPUT_INT2)
OBJDIR           := build

ifeq ($(NETCDFLIBS),"automatic")
	LNK_FLAGS = $(shell nc-config --flibs)
	INC_DIR = -I$(shell nc-config --includedir)
endif
ifeq ($(NETCDFLIBS),"macports")
	LIB_DIR           = -L/opt/local/lib
	INC_DIR           = -I/opt/local/include/
	LNK_FLAGS         = $(LIB_DIR) -lnetcdf -lnetcdff 
endif
ifeq ($(NETCDFLIBS),"fink")
        LIB_DIR           = -L/sw/lib -L/sw/lib/netcdf-gfortran/lib
        INC_DIR           = -I/sw/include -I/sw/lib/netcdf-gfortran/include
        LNK_FLAGS         = $(LIB_DIR) -lnetcdf -lnetcdff
endif

#================================================================  

ifeq ($(F95COMPILER),"gfortran")
#	FF_FLAGS         = -c -x f95-cpp-input -fconvert=big-endian -gdwarf-2 
	FF_FLAGS         = -c -x f95-cpp-input -g
	F90_FLAGS        =-fno-underscoring 
	FF               = gfortran $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
endif

ifeq ($(F95COMPILER),"ifort")
     FF_FLAGS         = -c -fpp -m64 -convert big_endian -gdwarf-2
#     F90_FLAGS        = -fp-model precise -assume byterecl -g -traceback -check bounds
    F90_FLAGS	      = -fp-model precise -ip -O3 -xHost
     FF               = ifort $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
     XTRA_FF 	      = -free -Tf
endif

ifeq ($(F95COMPILER),"pgi")
	FF_FLAGS         = -c -g -Mfree -Mpreprocess
	F90_FLAGS        = -g
	FF               = pgf90 $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
	LNK_FLAGS = $(shell /import/local/pkg/netcdf/netcdf-4.1.pgi/bin/nc-config --flibs)
	INC_DIR = -I$(shell /import/local/pkg/netcdf/netcdf-4.1.pgi/bin/nc-config --includedir)
endif

ifeq ($(F95COMPILER),"g95")
	FF_FLAGS         = -c -cpp -fendian=big
	F90_FLAGS        = -O3 -C  -g  -fno-underscoring
	FF               = /Applications/fort/g95/bin/i386-apple-darwin8.11.1-g95 $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
endif

CC                = gcc -O  $(INC_DIR)

#================================================================


VPATH = src:projects/$(PROJECT)

all: runfile

objects := $(addprefix $(OBJDIR)/,modules.o savepsi.o loop_pos.o writetrajs.o \
	            seed.o init_seed.o sw_stat.o turb.o getfile.o \
                    vertvel.o coord.o cross.o init_par.o time_subs.o \
                    interp.o interp2.o pos.o fishvel.o \
                    sw_seck.o sw_pres.o sw_dens0.o \
                    writepsi.o writetracer.o printinfo.o loop.o main.o \
		    setupgrid.o readfield.o diffusion.o light.o)

ifeq ($(F95COMPILER),"ifort")
runfile : $(objects)
	$(FF)  $(MYI_FLAGS) -o runtracmass $(objects) $(LNK_FLAGS) $(MYL_FLAGS)

$(OBJDIR)/%.o : %.f95
	$(FF) $(FF_FLAGS) $(ORM_FLAGS) $(PROJECT_FLAG) $(CASE_FLAG) $(ARG_FLAGS) $(XTRA_FF)  $< -o $@

$(objects) : 

endif



ifeq ($(F95COMPILER),"gfortran")
runfile : $(objects)
	$(FF)  -J$(OBJDIR) $(MYI_FLAGS) -o $(RUNFILE) $(objects) $(LNK_FLAGS) $(MYL_FLAGS)

$(OBJDIR)/%.o : %.f95
	$(FF) -J$(OBJDIR) $(FF_FLAGS) $(ORM_FLAGS) $(PROJECT_FLAG) $(CASE_FLAG) $(ARG_FLAGS) $< -o $@
endif

ifeq ($(F95COMPILER),"pgi")
runfile : $(objects)
	$(FF)  -module $(OBJDIR) $(MYI_FLAGS) -o $(RUNFILE) $(objects) $(LNK_FLAGS) $(MYL_FLAGS)

$(OBJDIR)/%.o : %.f95
	$(FF) -module $(OBJDIR) $(FF_FLAGS) $(ORM_FLAGS) $(PROJECT_FLAG) $(CASE_FLAG) $(ARG_FLAGS)  $< -o $@
endif



$(objects) : | $(OBJDIR)

$(OBJDIR):
	mkdir -p $(OBJDIR)


.PHONY : clean
clean :
	rm -rf build
	rm -f $(RUNFILE)
